.login-container
  = image_pack_tag "images/GTIMC Logo.png", alt: "Logo", class: "logo2"
  %h2 Create a user
  = form_with model: @user, url: admin_users_path, local: true do |f|
    .form-group
      = f.label :first_name, "First Name"
      = f.text_field :first_name, placeholder: "Enter first name", required: true
    .form-group
      = f.label :last_name, "Last Name"
      = f.text_field :last_name, placeholder: "Enter last name", required: true
    .form-group
      = f.label :email, "Email"
      = f.email_field :email, placeholder: "Enter email", required: true
    .form-group
      = f.label :password, "Password"
      = f.password_field :password, required: true
    .form-group
      = f.label :password_confirmation, "Confirm Password"
      = f.password_field :password_confirmation, required: true
    .form-group
      = f.label :role, "Role"
      = f.select :role, options_for_select([['Select a role', ''], ['QA Manager', 'qa_manager'], ['Auditor', 'auditor'], ['Auditee', 'auditee'], ['Senior Manager', 'senior_manager']]), {}, { required: true, id: 'role_select' }
    .form-group#company_field{ style: "display: none;" }
      = f.label :company, "Company"
      = f.text_field :company, placeholder: "Enter company name", id: "company_name"
    .form-group#address_field{ style: "display: none;" }
      = f.label :address_street, "Street Name"
      = f.text_field :address_street, placeholder: "Enter street name ..."
      = f.label :address_city, "City Name"
      = f.text_field :address_city, placeholder: "Enter city name ..."
      = f.label :address_postcode, "Postcode"
      = f.text_field :address_postcode, placeholder: "Enter postcode ..."


    .form-group
      = f.submit "Create User", class: "btn btn-primary green-btn"

:javascript
  document.addEventListener("DOMContentLoaded", function() {
    var roleSelect = document.getElementById("role_select");
    var companyField = document.getElementById("company_field");
    var addressField = document.getElementById("address_field");
    var companyNameInput = document.getElementById("company_name");

    var existingCompanies = #{raw @companies.to_json};

    function isNewCompany(name) {
      const input = name.trim().toLowerCase();
      return !existingCompanies.some(c => typeof c === "string" && c.toLowerCase() === input);
    }

    // Show/hide company field based on role
    roleSelect.addEventListener("change", function() {
      if (this.value === "auditee") {
        companyField.style.display = "block";
        if (isNewCompany(companyNameInput.value)) {
          addressField.style.display = "block";
        }
      } else {
        companyField.style.display = "none";
        addressField.style.display = "none";
      }
    });

    // Show address fields only if company doesn't exist
    companyNameInput.addEventListener("input", function() {
      if (isNewCompany(this.value)) {
        addressField.style.display = "block";
      } else {
        addressField.style.display = "none";
      }
    });

    // Prevent submission if address fields are incomplete
    const form = document.querySelector("form");
    form.addEventListener("submit", function(e) {
      if (roleSelect.value === "auditee" && isNewCompany(companyNameInput.value)) {
        const street = document.querySelector("[name='user[address_street]']").value.trim();
        const city = document.querySelector("[name='user[address_city]']").value.trim();
        const postcode = document.querySelector("[name='user[address_postcode]']").value.trim();
        if (!street || !city || !postcode) {
          alert("Please complete the address fields for a new company.");
          e.preventDefault();
        }
      }
    });
  });
